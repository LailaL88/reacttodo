{"version":3,"sources":["components/LiItem.jsx","components/App.jsx","index.js"],"names":["LiItem","props","React","useState","lineThrough","setLineThrough","className","style","textDecoration","onClick","text","deleteItem","id","App","inputValue","setInputValue","listItems","setItems","deleteToDo","prev","filter","li","index","console","log","onChange","event","target","value","type","map","liItem","ReactDOM","render","document","getElementById"],"mappings":"4LAYeA,MAVf,SAAgBC,GACd,IAEA,EAAsCC,IAAMC,UAAS,GAArD,mBAAOC,EAAP,KAAoBC,EAApB,KAIA,OAAO,sBAAKC,UAAU,WAAf,UAA0B,oBAAIC,MAAOH,EANrB,CAACI,eAAgB,gBAClB,CAACA,eAAgB,QAKmDC,QAH1F,WACEJ,GAAeD,IAEgB,SAAmFH,EAAMS,OAAU,sBAAMJ,UAAU,WAAWG,QAAU,kBAAMR,EAAMU,WAAWV,EAAMW,KAAlE,mB,MCwCvHC,MA7Cf,WAEE,MAAmCX,IAAMC,SAAS,IAAlD,mBAAMW,EAAN,KAAkBC,EAAlB,KACA,EAA8Bb,IAAMC,SAAS,IAA7C,mBAAOa,EAAP,KAAkBC,EAAlB,KAYA,SAASC,EAAWN,GAClBK,GAAS,SAAAE,GACP,OAAOA,EAAKC,QAAO,SAACC,EAAIC,GAEtB,OADAC,QAAQC,IAAIZ,EAAIU,GACTA,IAAUV,QAKvB,OACE,sBAAKN,UAAU,YAAf,UACE,qBAAKA,UAAU,UAAf,SACE,8CAEF,sBAAKA,UAAU,OAAf,UACE,uBAAOmB,SAzBb,SAAsBC,GAClBX,EAAcW,EAAMC,OAAOC,QAwBMC,KAAK,SACpC,wBAAQpB,QAtBd,WACEQ,GAAS,SAAAE,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAiBL,QAoBf,SACE,4CAGJ,8BACE,6BACCE,EAAUc,KAAI,SAAUC,EAAQT,GAChC,MAAmB,KAAXS,EAAgB,cAAC,EAAD,CAAoBnB,GAAIU,EAAOZ,KAAMqB,EAAQpB,WAAYO,GAA5CI,GAA4D,gBCtC1GU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.91f1576a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction LiItem(props) {\r\n  const haslineThrough = {textDecoration: 'line-through'};\r\n  const noLineThrough = {textDecoration: 'none'};\r\n  const [lineThrough, setLineThrough] = React.useState(false);\r\n  function addLineThrough() {\r\n    setLineThrough(lineThrough ? false : true);\r\n  }\r\n  return <div className=\"listItem\"><li style={lineThrough ? haslineThrough : noLineThrough} onClick={addLineThrough}>{props.text}</li><span className=\"closeBtn\" onClick={ () => props.deleteItem(props.id)}>X</span></div>;\r\n}\r\n\r\nexport default LiItem;","import React from \"react\";\nimport LiItem from './LiItem';\nimport '../styles/styles.scss';\n\nfunction App() {\n\n  const[inputValue, setInputValue] = React.useState(\"\");\n  const [listItems, setItems] = React.useState([]);\n\n  function handleChange(event) {\n      setInputValue(event.target.value);\n  }\n\n  function handleClick() {\n    setItems(prev => {\n      return [...prev, inputValue];\n    })\n  }\n\n  function deleteToDo(id) {\n    setItems(prev => {\n      return prev.filter((li, index) => {\n        console.log(id, index);\n        return index !== id;\n      })\n    })\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <div className=\"form\">\n        <input onChange={handleChange} type=\"text\" />\n        <button onClick={handleClick}>\n          <span>Add</span>\n        </button>\n      </div>\n      <div>\n        <ul>\n        {listItems.map(function (liItem, index) { \n         return  liItem !== \"\" ? <LiItem key={index} id={index} text={liItem} deleteItem={deleteToDo}/> : null })}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE: Make this app work by applying what you've learnt.\n//1. When new text is written into the input, its state should be saved.\n//2. When the add button is pressed, the current data in the input should be\n//added to an array.\n//3. The <ul> should display all the array items as <li>s\n"],"sourceRoot":""}